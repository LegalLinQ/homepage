{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular2-google-chart.directive.ts","./src/app/dc.drp-graphs.component.ts","./src/app/drp-dialog.component.ts","./src/app/drp-dialog.component.html","./src/app/drp-scriptloader.ts","./src/app/drp.component.ts","./src/app/drp.component.html","./src/app/drp.module.ts","./src/app/drpBaseData.ts","./src/app/drpservice.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Directive, ElementRef, Input, OnChanges} from '@angular/core';\r\n\r\ndeclare let google: any;\r\ndeclare let googleLoaded: any;\r\ndeclare let googleChartsPackagesToLoad: any;\r\n\r\n@Directive({\r\n  selector: '[GoogleChart]'\r\n})\r\nexport class GoogleChartDirective implements OnChanges {\r\n\r\n  public _element: any;\r\n  @Input('chartType') public chartType: string;\r\n  @Input('chartOptions') public chartOptions: Object;\r\n  @Input('chartData') public chartData: Object;\r\n  constructor(public element: ElementRef) {\r\n    this._element = this.element.nativeElement;\r\n  }\r\n  ngOnChanges() {\r\n    if (!googleLoaded) {\r\n      googleLoaded = true;\r\n      google.charts.load('current', {'packages':['corechart', 'gauge']['orgchart']});\r\n    }\r\n    setTimeout(() => this.drawGraph(this.chartOptions, this.chartType, this.chartData, this._element), 1000);\r\n  }\r\n  drawGraph (chartOptions:any, chartType:any, chartData:any, element:any) {\r\n    google.charts.setOnLoadCallback(drawChart);\r\n    function drawChart() {\r\n      let wrapper;\r\n      wrapper = new google.visualization.ChartWrapper({\r\n        chartType: chartType,\r\n        dataTable: chartData ,\r\n        options: chartOptions || {}\r\n      });\r\n      wrapper.draw(element);\r\n    }\r\n  }\r\n}","/**\r\n * SOURCE: https://angular.io/guide/dynamic-component-loader\r\n * \r\n */\r\n\r\n/**\r\n * ALL IMPORTS FOR:\r\n *  - directive (DCDirective)\r\n *  - component placeholder (DCPlaceholderComponent)\r\n *  - type class (DCItem)\r\n *  - service (DynamicContentService)\r\n *  - main module (DCMainComponent)\r\n *  - dynamic data module (DCDataComponent)\r\n * \r\n * Add to .module:\r\n *  - import { DCMainComponent, DCDirective, DCDataComponent, DynamicContentService } from './dc.drp-graphs.component';\r\n *  - declarations: [ DCMainComponent, DCDataComponent, DCDirective ],\r\n *  - providers:[ DynamicContentService ],\r\n *   - entryComponents: [ DCMainComponent, DCDataComponent ]\r\n *\r\n  * Add to main component html:\r\n *  <dynamic-content [items]=\"items\" [tabchange]=\"selectedIndex\" ></dynamic-content> //is selector of main component\r\n *  'tabchange' and 'items' are holding data to be transferred to corresponding '@Input statement in main component.\r\n */\r\nimport { Component, Input, OnInit, ViewChild, ComponentFactoryResolver, Type, Directive, ViewContainerRef, Injectable } from '@angular/core';\r\nimport { MatSlider } from '@angular/material/slider';\r\nimport { MatButton } from '@angular/material/button';\r\n//Next imports are specific for DRP\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\nimport { DRPMOCKDATA } from './drpBaseData';\r\nimport { Script } from './drp-scriptloader'; //gemaakt om Google Charts script te lazy loaden\r\n\r\n// Directive: Selector will be placed in the component where the dynamic data will be shown like this: \"<ng-template dynamic-content-data></ng-template>\"\r\n@Directive({ selector: '[dynamic-content-data]', })\r\nexport class DCDirective { constructor( public viewContainerRef: ViewContainerRef ) { } }\r\n\r\n// PLACEHOLDER COMPONENT\r\nexport interface DCPlaceholderComponent { data: any; }\r\n\r\n// DCItem, import 'type' from angular core\r\nexport class DCItem {  constructor( public component: Type<any>, public data: any) {} }\r\n\r\n/**\r\n * SERVICE NEEDED\r\n */\r\n@Injectable() \r\nexport class DynamicContentService {\r\n  constructor (\r\n    private localStorageService: LocalStorageService\r\n  ) { }\r\n  //hiermee wordt de standaard set data of de opgeslagen data opgehaald.\r\n  Items() {\r\n    let stored_data = this.localStorageService.get(key);\r\n    //geen stored data dan standaard static data\r\n    let dataToSend = DRPMOCKDATA;\r\n    if (stored_data){\r\n      for (var key in dataToSend) { dataToSend[key] = stored_data[key]  }\r\n    }\r\n    return [ new DCItem(DCDataComponent, { dataToSend }),  ];\r\n  }\r\n}\r\n\r\n/**\r\n * MAIN COMPONENT, initialisatie, inladen scripts\r\n */\r\n\r\n@Component({\r\n  selector: 'dynamic-content',\r\n  template: `<ng-template dynamic-content-data></ng-template>`\r\n})\r\nexport class DCMainComponent implements OnInit {\r\n  @Input() tabchange:number;\r\n  @ViewChild(DCDirective) dcHost: DCDirective;\r\n  public items: DCItem[];\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private script : Script,\r\n    private _dcService: DynamicContentService,\r\n  ) { }\r\n  \r\n  ngOnInit(){\r\n    //eenmalige initialisatie\r\n    this.items = this._dcService.Items();\r\n  }\r\n  \r\n  //Check bij welke tab hij is, 0 = Claimant, 1 = Defendant, 2 = Analysis \r\n  ngOnChanges() {\r\n    //wanneer de analyse tab wordt opgevraagd, dan losgaan \r\n    if(this.tabchange == 2) {\r\n      //vraag het script op\r\n      this.script.load('googlechart')\r\n        //laadt Charts pas als script is ingeladen\r\n        .then(() => this.loadComponent())\r\n        //eventuele foutmeldingen: TODO, een spinner op het scherm voor als het lang duurt.\r\n        .catch(() => console.log('Google Chart loading niet gelukt'));\r\n    }\r\n\t}\r\n  \r\n  //DE MAGIE, nog eens uitzoeken wat hier nu gebeurt.\r\n  loadComponent() {\r\n    let dcItem = this.items[0];\r\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(dcItem.component);\r\n    let viewContainerRef = this.dcHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n    let componentRef = viewContainerRef.createComponent(componentFactory);\r\n    (<DCPlaceholderComponent>componentRef.instance).data = dcItem.data;\r\n  }\r\n}\r\n\r\n/**\r\n * DATA COMPONENT, HIER WORDT DE DYNAMISCHE CONTENT OPGEBOUWD/SAMENGESTELD\r\n */\r\n@Component({ \r\n  template: `\r\n  <div style=\"margin-top:16px; margin-bottom:16px;\">Level of differences</div>\r\n  <div id=\"gauge_chart\" [chartType]=\"gauge_type\" [chartOptions]= \"gauge_ChartOptions\" [chartData]=\"gauge_ChartData\" GoogleChart></div>    \r\n    <div style=\"margin-top:16px;\"><h2>Recommendation:</h2></div>\r\n    <p>Based on this recommendation, a match with existing dispute resolution offerings can be made.<p>\r\n    <mat-slider color=\"primary\" min=\"1\" max=\"100\" step=\"1\" value=\"{{ResultNumber}}\"></mat-slider>\r\n    <p style=\"font-size:small; margin-top: -10px\">Negotiation - Mediation - Arbitration - Litigation</p>\r\n  `,\r\n  styles:[`\r\n    .mat-slider-horizontal{\r\n      min-width: 300px;\r\n    }\r\n    p{\r\n      white-space: pre-rap;\r\n      margin-top: -5px;\r\n      font-size: small;\r\n    }\r\n  `]\r\n})\r\nexport class DCDataComponent implements OnInit { \r\n  @Input() data: any; \r\n  public ResultNumber: number;\r\n\r\n  // ------ GAUGE - CLOCK -  UAI -----------\r\n  public gauge_type : string = \"Gauge\";\r\n\r\n  public gauge_ChartData = [\r\n        ['Label', 'Value'],\r\n        ['UAI', 30],\r\n        ['Preference', 80]\r\n  ];\r\n\r\n  public gauge_ChartOptions = {\r\n        width: 400, height: 120,\r\n        redFrom: 75, redTo: 100,\r\n        yellowFrom: 25, yellowTo: 75,\r\n        greenFrom: 0, greenTo: 25,\r\n        minorTicks: 5\r\n  };\r\n\r\n  // ------ BAR CHARTS -----------\r\n  public bar_ChartData = [\r\n        ['Element', 'Procedure'],\r\n        ['Recommmended procedure', 30]\r\n  ];\r\n\r\n  public bar_ChartOptions = {\r\n        title: 'Claimant and Defendant profiles combined',\r\n        width: '600px',\r\n        chartArea: {width: '70%'},\r\n        hAxis: {\r\n            title: 'Percentage',\r\n            minValue: 0,\r\n            maxValue: 100,\r\n            textStyle: {\r\n                bold: false,\r\n                fontSize: 10,\r\n                color: '#4d4d4d'\r\n            },\r\n            titleTextStyle: {\r\n                bold: true,\r\n                fontSize: 10,\r\n                color: '#4d4d4d'\r\n            }\r\n        },\r\n      };\r\n\r\n ngOnInit() {\r\n   let uai_cl = Number (this.data['dataToSend'][0].cl_value);\r\n   let uai_de = Number (this.data['dataToSend'][0].de_value);\r\n   this.bar_ChartData[1] = ['UAI', uai_de, uai_cl];\r\n \r\n   let uaidiff = this.diff(+this.data['dataToSend'][0].cl_value, +this.data['dataToSend'][0].de_value)\r\n   this.gauge_ChartData[1] = ['UAI', uaidiff];\r\n\r\n   let pref_cl = Number (this.data['dataToSend'][1].cl_value);\r\n   let pref_de = Number (this.data['dataToSend'][1].de_value);\r\n   this.bar_ChartData[2] = ['Preference', pref_de, pref_cl];    \r\n\r\n   let prefdiff = this.diff(+this.data['dataToSend'][1].cl_value, +this.data['dataToSend'][1].de_value)\r\n   this.gauge_ChartData[2] = ['Procedure', prefdiff];\r\n\r\n   let prefaverage = Number (this.average(pref_cl,pref_de ) );\r\n   let uaiaverage =  Number (this.average(uai_cl,uai_de ) );\r\n   let totalaverage = this.average(prefaverage,uaiaverage );\r\n   this.ResultNumber = Number (totalaverage);\r\n\r\n  }\r\n\r\n  //CALC difference between numbers\r\n  diff(a:number,b:number){return Math.abs(a-b);}\r\n  average(x:number,y:number){return((x+y)/2).toFixed(2)}\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSelect } from '@angular/material/select';\r\n\r\n@Component({\r\n  selector: 'drp-dialogbox',\r\n  templateUrl: 'drp-dialog.component.html',\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  public Qtable :string;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: {\r\n      drp : any, //Injected is data from drp.component.ts\r\n      tab: any, //index, waarbij: 0 = Claimant, 1 = Defendant, 2 = Analysis\r\n    }, \r\n  ) {}\r\n  ngOnInit() {\r\n    //Check bij welke tab hij is, 0 = Claimant, 1 = Defendant, 2 = Analysis \r\n    //Provide data for Switch statement, to select correct form\r\n    if (this.data.tab == 0 && this.data.drp.name == 'Procedural preference') { this.Qtable = 'claimant-proc_pref'; };\r\n    if (this.data.tab == 0 && this.data.drp.name == 'Uncertainty Avoidance Index') { this.Qtable = 'claimant-UAI'; };\r\n    if (this.data.tab == 1 && this.data.drp.name == 'Procedural preference') { this.Qtable = 'defendant-proc_pref'; };\r\n    if (this.data.tab == 1 && this.data.drp.name == 'Uncertainty Avoidance Index') { this.Qtable = 'defendant-UAI'; };\r\n  }\r\n}","<h2 mat-dialog-title class=\"primary-color\">{{data.drp.name}}</h2>\r\n<mat-dialog-content class=\"accent-color\">\r\n  <p>{{data.drp.description}}</p>\r\n\r\n <div [ngSwitch]=\"Qtable\">\r\n    <ng-template [ngSwitchCase]=\"'claimant-proc_pref'\" ngSwitchDefault> \r\n      <mat-form-field>\r\n        <mat-select [(ngModel)]=\"data.drp.cl_value\" name=\"cl_Pref\">\r\n          <mat-option value=20>Negotiation</mat-option>\r\n          <mat-option value=40>Mediation</mat-option>\r\n          <mat-option value=60>Arbitration</mat-option>\r\n          <mat-option value=80>Litigation</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </ng-template>      \r\n    \r\n    <ng-template [ngSwitchCase]=\"'claimant-UAI'\"> \r\n      <mat-form-field>\r\n          <mat-select [(ngModel)]=\"data.drp.cl_value\" name=\"cl_UAI\">\r\n            <mat-option value=20>Trust is key</mat-option>\r\n            <mat-option value=40>A bit of risk is OK</mat-option>\r\n            <mat-option value=60>I take calculated risks</mat-option>\r\n            <mat-option value=80>Why should I take risks?</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n    </ng-template>\r\n\r\n    <ng-template [ngSwitchCase]=\"'defendant-proc_pref'\"> \r\n      <mat-form-field>\r\n          <mat-select [(ngModel)]=\"data.drp.de_value\" name=\"de_Pref\">\r\n            <mat-option value=20>Negotiation</mat-option>\r\n            <mat-option value=40>Mediation</mat-option>\r\n            <mat-option value=60>Arbitration</mat-option>\r\n            <mat-option value=80>Litigation</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n    </ng-template>\r\n\r\n    <ng-template [ngSwitchCase]=\"'defendant-UAI'\"> \r\n      <mat-form-field>\r\n        <mat-select [(ngModel)]=\"data.drp.de_value\" name=\"de_UAI\">\r\n          <mat-option value=20>Trust is key</mat-option>\r\n          <mat-option value=40>A bit of risk is OK</mat-option>\r\n          <mat-option value=60>I take calculated risks</mat-option>\r\n          <mat-option value=80>Why should I take risks?</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </ng-template>\r\n    \r\n    <p><small>{{data.drp.value_input_instruct}}</small></p>\r\n  \r\n  </div>  \r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" mat-dialog-close=\"save\">OK</button>  \r\n      <button mat-raised-button color=\"secondary\" mat-dialog-close=\"exclude\">Exclude</button>  \r\n</mat-dialog-actions>\r\n\r\n\r\n\r\n\r\n","/**\r\n * see: https://stackoverflow.com/questions/37729896/how-to-load-a-3rd-party-script-from-web-dynamically-into-angular2-component\r\n * First answer, probably is third answer better but didn't it get to work\r\n * \r\n * UITLEG: \r\n * - in module: \r\n *      - import: \"import { Script } from './drp-scriptloader';\"\r\n *      - voeg toe aan providers: \"providers:[ Script],\"\r\n * \r\n * - in een compontent: \r\n *      - import deze loader: \"import { Script } from './drp-scriptloader';\"\r\n *      - in de construct, maak aan variabele aan: \"constructor( private script : Script) { }\r\n *      - in een functie, bijv. oninit, roep het script op (bij de naam) als promise, \r\n *          zodat eerst script wordt geladen en dan pas de rest: \r\n *              this.script.load('googlechart')\r\n *                   .then(() => this.loadComponent()) //dit is de vervolgactie\r\n *                   .catch(() => console.log('Google Chart loading niet gelukt')); //dit is eventuele foutmelding\r\n * \r\n */\r\n\r\n /**\r\n * SCRIPT STORE, holds all names of the scripts\r\n * from example ScriptStore.ts\r\n */\r\n\r\ninterface Scripts {\r\n    name: string;\r\n    src: string;\r\n}  \r\nexport let ScriptStore: Scripts[] = [\r\n    { name: 'googlechart', src: 'https://www.gstatic.com/charts/loader.js' },\r\n    //{ name: 'googlechart_load_instructions', src: '../assets/angular2-google-chart-loadinstructions.js' }\r\n    ];\r\n\r\n/**\r\n * SCRIPT SERVICE\r\n * from example script.service.ts\r\n */\r\nimport {Injectable} from \"@angular/core\";\r\n//import {ScriptStore} from \"./script.store\";\r\n\r\ndeclare var document: any;\r\n\r\n@Injectable()\r\nexport class Script {\r\n\r\nprivate scripts: any = {};\r\n\r\nconstructor() {\r\n    ScriptStore.forEach((script: any) => {\r\n        this.scripts[script.name] = {\r\n            loaded: false,\r\n            src: script.src\r\n        };\r\n    });\r\n}\r\n\r\nload(...scripts: string[]) {\r\n    var promises: any[] = [];\r\n    scripts.forEach((script) => promises.push(this.loadScript(script)));\r\n    return Promise.all(promises);\r\n}\r\n\r\nloadScript(name: string) {\r\n    return new Promise((resolve, reject) => {\r\n        //resolve if already loaded\r\n        if (this.scripts[name].loaded) {\r\n            resolve({script: name, loaded: true, status: 'Already Loaded'});\r\n        }\r\n        else {\r\n            //load script\r\n            let script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = this.scripts[name].src;\r\n            if (script.readyState) {  //IE\r\n                script.onreadystatechange = () => {\r\n                    if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n                        script.onreadystatechange = null;\r\n                        this.scripts[name].loaded = true;\r\n                        resolve({script: name, loaded: true, status: 'Loaded'});\r\n                    }\r\n                };\r\n            } else {  //Others\r\n                script.onload = () => {\r\n                    this.scripts[name].loaded = true;\r\n                    resolve({script: name, loaded: true, status: 'Loaded'});\r\n                };\r\n            }\r\n            script.onerror = (error: any) => resolve({script: name, loaded: false, status: 'OnError'});\r\n            document.getElementsByTagName('head')[0].appendChild(script);\r\n\r\n            /* SPECIALE FUNCTIE VOOR INLINE SCRIPT */\r\n            let script_inline = document.createElement('script');\r\n            script_inline.type = 'text/javascript';\r\n            script_inline.text = \"var googleLoaded = false; var googleChartsPackagesToLoad = ['BarChart', 'Gauge'];\";\r\n            document.getElementsByTagName('head')[0].appendChild(script_inline);            \r\n        }\r\n    });\r\n}\r\n\r\n}","import { Component, OnInit, Input } from '@angular/core';\n\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatTabGroup, MatTab } from '@angular/material/tabs';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButton } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIcon } from '@angular/material/icon';\n\n\nimport { DRPData } from './drpdata';\nimport { DRPService } from './drpservice';\nimport { DialogComponent } from './drp-dialog.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'drp.component.html',\n  styleUrls: ['./drp.component.css'],\n  providers: [],\n})\n\nexport class DRPComponent implements OnInit {\n  public drpdata: DRPData[]; \n  public selectedItem: DRPData;\n  public cl_fingerprint:string;\n  public de_fingerprint:string;\n  selectedIndex:number; //van de tabs, start op nul\n    \n  constructor(\n    private _drpService: DRPService,\n    public dialog: MatDialog,\n  ) { }\n \n ngOnInit() {\n    this.getData(\"drpdata\");\n    //ga door bij laatste tab of begin bij UNCITRAL tab\n    let tab = this._drpService.getTabStatus('drptab');\n    if (tab == null){ \n      this._drpService.setTabStatus('drptab', 3); \n      this.selectedIndex = 3;  \n      }//set tab on 0 on first go\n    else { this.selectedIndex = Number (tab); }\n    //static fingerprint data\n    this.cl_fingerprint = '#9KL473LK'\n    this.de_fingerprint = '#7EL897KI'\n  }\n  getData(key:string) {\n    this._drpService.getBaseData(key).then(drpdata => this.drpdata = drpdata);\n  }\n  persistData(key:string) {\n    let test = this._drpService.storeToPersist(key,this.drpdata);\n  }\n  resetData() {\n    this._drpService.resetPersist();\n    //TODO, RELOAD ORIGINAL DATA, BELOW DOESN'T WORK\n  }\n \n  //Open popup window en stuur object er naar toe\n  openDialog(drpdata:any) {\n    //initiate dialogbox and send data\n    let dialogRef = this.dialog.open(DialogComponent, {\n      width: '324px',\n      data: {\n        drp: drpdata, //alle data in drpdata\n        tab: this.selectedIndex, //index, waarbij: 0 = Claimant, 1 = Defendant, 2 = Analysis\n      }\n      } );\n    //result back\n    dialogRef.afterClosed().subscribe(result => {\n      if(result == 'exclude') {\n        drpdata.status_icon = 'block'; //set checkmark icon\n        //use tab selector to see if claimant or defendant provided data\n        if (this._drpService.getTabStatus('drptab') == 0) {drpdata.cl_value = 'none (excluded)';}\n        else { drpdata.de_value = 'none (excluded)';}\n        //TODO, REMOVE VALUE FROM CORRECT DRPDATA...\n        this.persistData('drpdata');\n      }        \n      if(result == 'save') {\n        drpdata.status_icon = 'done'; //set checkmark icon\n        this.persistData('drpdata'); //store data in localstorage\n      }\n    });\n  }\n  \n  //Check bij welke tab hij is, 0 = Claimant, 1 = Defendant, 2 = Analysis \n  selectedIndexChange(val :number ){\n    this.selectedIndex=val; //for in the page\n    this._drpService.setTabStatus('drptab', val); //for persisting outside page\n  }\n  gotoClaimant(){this.selectedIndex=0;} //2 is index number of analysis tab\n  gotoDefendant(){this.selectedIndex=1;} //2 is index number of analysis tab\n  gotoAnalysis(){this.selectedIndex=2;} //2 is index number of analysis tab\n}","<div id=drp-main fxLayout=\"column\" fxLayoutAlign=\"start center\">\r\n    <div id=drp-inner fxLayout=\"column\">\r\n    <mat-tab-group dynamicHeight=\"true\" (selectedIndexChange)=\"selectedIndexChange($event)\" [selectedIndex]=\"selectedIndex\">\r\n      <mat-tab label=\"Claimant\">\r\n        <h2>Claimant profile</h2>\r\n        <div class = \"drp-mainfields\">\r\n          <li *ngFor=\"let drpitem of drpdata\">\r\n            <button mat-raised-button (click)=\"openDialog(drpitem)\">\r\n              <mat-icon>{{drpitem.status_icon}}</mat-icon>\r\n              {{drpitem.name}}\r\n            </button>\r\n            <p>{{drpitem.value_description}} {{drpitem.cl_value}}</p>\r\n          </li>\r\n        </div>\r\n        <div>\r\n          <input matInput placeholder=\"Example fingerprint (in blockchain)\" disabled value={{cl_fingerprint}}>\r\n        </div>\r\n        <button mat-raised-button color=\"secondary\" mat-button (click)=\"gotoAnalysis()\">Analyse</button>\r\n      </mat-tab>\r\n      \r\n      \r\n      <mat-tab label=\"Defendant\">\r\n        <h2>Defendant Profile</h2>\r\n        <div class = \"drp-mainfields\">\r\n          <li *ngFor=\"let drpitem of drpdata\">\r\n            <button mat-raised-button (click)=\"openDialog(drpitem)\">\r\n              <mat-icon> {{drpitem.status_icon}}</mat-icon>\r\n              {{drpitem.name}}\r\n            </button>\r\n            <p>{{drpitem.value_description}} {{drpitem.de_value}}</p>\r\n          </li>\r\n        </div>\r\n        <!--<input [(ngModel)]=de_fingerprint placeholder=\"insert value\"/>-->\r\n          <div>\r\n            <input matInput placeholder=\"Example fingerprint (in blockchain)\" disabled value={{de_fingerprint}}>\r\n          </div>\r\n        <button mat-raised-button color=\"secondary\" mat-button (click)=\"gotoAnalysis()\">Analyse</button>\r\n      </mat-tab>\r\n\r\n      <!--ANALYSIS START -->\r\n      <mat-tab label=\"Analysis\">\r\n      <!--CHARTS UAI -->\r\n        <h2>DEMO Analysis</h2>\r\n        <h6>This is NOT legal advise, just a demonstration</h6>\r\n        <p>Fingerprints: <span style=\"color:red; font-weight:700\">{{cl_fingerprint}}</span> | <span style=\"color:blue; font-weight:bold\">{{de_fingerprint}}</span></p>\r\n    <!-- AN INJECTABLE TO DYNAMIC LOAD items BASED ON ACTUAL DATA -->\r\n        <dynamic-content [tabchange]=\"selectedIndex\" ></dynamic-content>\r\n      </mat-tab>\r\n      \r\n      <!--UNCITRAL 2017 TAB -->\r\n      <mat-tab label=\"UNCITRAL 2017\">\r\n      <!--CHARTS UAI -->\r\n        <h2>PRESENTATION 50TH ANNIVERSARY UNCITRAL CONGRESS</h2>\r\n          <p>This demo was shown at the UNCITRAL Congress 2017 as part of new frontiers in dispute settlement. <a href=\"https://au.linkedin.com/in/dr-dalma-r-demeter-849aa1a\" target=\"_blank\">Dr Dalma R. Demeter</a> showed it in the jointly prepared <a href=\"http://www.uncitral.org/pdf/english/congress/Draft_Programme_170517.pdf\" target=\"_blank\">presentation</a> with title \"The use of technology in dispute settlement\". The demo shows how culture elements can be taken into consideration when determining the best dispute resolution option for a certain case.</p>\r\n          <p>In the report to the General Assembly of the United Nations regarding the 50th Session of UNCITRAL, the presentation is referred to in paragraph 408:</p>\r\n          <p><i>\"The third panel, on new frontiers in dispute settlement, had covered developments in the field of [...] solutions of a technological nature to enhance access to justice.\"</i> (<a href=\"https://undocs.org/en/A/72/17\" target=\"_blank\">source</a>)</p>\r\n        <h2>DEMO UNCITRAL 2017</h2>\r\n          <p>This prototype demonstrates what a small part of the application may become.</p>\r\n          <p>Feel free to test it</p>\r\n          <p>For background please read <a href=\"http://www.legallinq.com/UNCITRAL_2017_Dispute_Resolution_Presentation/assets/98-DEMETER_and_KNIJPENGA-Putting_technology_at_the_service_of_access_to_justice.pdf\" target=\"_blank\"> the paper</a> by Dalma Demeter and Jeroen Knijpenga.</p>\r\n          \r\n          <button mat-raised-button (click)=\"gotoClaimant()\">Start as Claimant</button>\r\n          <button mat-raised-button (click)=\"gotoDefendant()\">Start as Defendant</button>\r\n          <br/>\r\n          <button mat-button (click)=\"resetData()\"><mat-icon>delete</mat-icon>Reset Profile Data</button>\r\n\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule }   from '@angular/forms';\n//import { HttpModule } from '@angular/http'; depreciated, vervanging:\nimport { HttpClientModule } from '@angular/common/http';\nimport { LocalStorageModule } from 'angular-2-local-storage';\n\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\n \nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { DRPComponent } from './drp.component';\nimport { GoogleChartDirective } from './angular2-google-chart.directive';\nimport { DialogComponent } from './drp-dialog.component'\nimport { DCMainComponent, DCDirective, DCDataComponent, DynamicContentService } from './dc.drp-graphs.component';\nimport { DRPService } from './drpservice';\nimport { Script } from './drp-scriptloader';\n\n\n@NgModule({\n  declarations: [ \n    DRPComponent,\n    DialogComponent,\n    GoogleChartDirective,\n    DCMainComponent,\n    DCDataComponent,\n    DCDirective\n    ],\n    imports: [ \n      BrowserModule,\n      BrowserAnimationsModule,\n      CommonModule,\n      HttpClientModule, \n      MatDialogModule, MatTabsModule,MatInputModule, MatFormFieldModule, MatSliderModule, MatButtonModule, MatSelectModule, MatIconModule,\n      FlexLayoutModule,\n      FormsModule,\n      LocalStorageModule.forRoot({\n         prefix: 'llqdrp',\n         storageType: 'localStorage'\n       }),\n    ],\n  providers:[ DRPService, DynamicContentService, Script],\n  entryComponents: [ DialogComponent, DCMainComponent, DCDataComponent ],\n  bootstrap: [DRPComponent]\n})\nexport class AppModule { }\n","import { DRPData } from './drpdata';\r\n\r\nexport var DRPMOCKDATA: DRPData[] = [\r\n/*\t{\r\n\t\t\"id\" : 0, \r\n\t\t\"name\" : \"\", \r\n\t\t\"description\" : \"\",\r\n\t\t\"cl_value\" : \"\",\r\n\t\t\"value_description\" : \"\",\r\n\t\t\"value_input_instruct\" : \"\"\r\n\t},\r\n*/\t{\r\n\t\t\"id\" : 0, \r\n\t\t\"name\" : \"Uncertainty Avoidance Index\", \r\n\t\t\"description\" : \"A cultural element that measures the relative risk avoidance.\",\r\n\t\t\"cl_value\" : \"50\",\r\n\t\t\"de_value\" : \"50\",\r\n\t\t\"value_description\" : \"The percentage of UAI is:\",\r\n\t\t\"value_input_instruct\" : \"Please make a choice or 'EXCLUDE'.\",\r\n\t\t\"status_icon\" : \"edit\"\r\n\t},\r\n\t{\r\n\t\t\"id\" : 1, \r\n\t\t\"name\" : \"Procedural preference\", \r\n\t\t\"description\" : \"Preferences on a dispute resolution continuum.\",\r\n\t\t\"cl_value\" : \"40\",\r\n\t\t\"de_value\" : \"40\",\r\n\t\t\"value_description\" : \"On a dispute resolution continuum scale: \",\r\n\t\t\"value_input_instruct\" : \"Please make a choice or 'EXCLUDE'.\",\r\n\t\t\"status_icon\" : \"edit\"\r\n\t},\r\n];","import { Injectable } from '@angular/core';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\nimport { DRPMOCKDATA } from './drpBaseData';\r\nimport { DRPData } from './drpdata';\r\n\r\n@Injectable() \r\nexport class DRPService {\r\n\tconstructor (\r\n        //API https://github.com/grevory/angular-local-storage\r\n\t\tprivate localStorageService: LocalStorageService,\r\n\t\t//public stored_data: DRPData[],\r\n    ) { }\r\n    \r\n\tgetBaseData(key:string) {\r\n\t\tlet stored_data = this.localStorageService.get(key);\r\n\t\t//geen stored data dan standaard static data\r\n\t\tlet dataToSend = DRPMOCKDATA;\r\n\t\tif (stored_data){\r\n\t\t\tfor (var key in dataToSend) {\r\n   \t\t\t\tdataToSend[key] = stored_data[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.resolve(dataToSend);\r\n\t}\r\n\r\n\tgetIndividualData(id: number) {\r\n    return Promise.resolve(DRPMOCKDATA)\r\n      .then(DRPdata => DRPdata.filter(h => h.id === id)[0]);\r\n\t}\r\n\tstoreToPersist(key:string, drpvalues: any){\r\n\t\t//TODO: maybe filter only values, but lot of trouble for not much fun\r\n\t\treturn this.localStorageService.set(key, drpvalues);\r\n\t}\r\n\tresetPersist(){\r\n\t\tthis.localStorageService.clearAll();\r\n\t}\r\n\r\n\t//tab status on DRP mainpage\r\n\tgetTabStatus(page:string){ return this.localStorageService.get (page)\t}\r\n\tsetTabStatus(page:string, no:number){ return this.localStorageService.set(page, no) }\r\n\r\n\tgetSuveyJson(id: number) {\r\n\t\tlet surveyJSON;\r\n\t\tconsole.log('Survey ID requested: ' +id);\r\n\t\tif (id === 0) return surveyJSON = {pages:[{name:\"page1\",elements:[{type:\"panel\",name:\"panel1\",elements:[{type:\"radiogroup\",choices:[\"item1\",\"item2\",\"item3\"],name:\"question1\"}],title:\"wt is het\"}]}]};\r\n\r\n\t}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/drp.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}