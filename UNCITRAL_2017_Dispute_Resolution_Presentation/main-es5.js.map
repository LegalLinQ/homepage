{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/angular2-google-chart.directive.ts","webpack:///src/app/dc.drp-graphs.component.ts","webpack:///src/app/drp-dialog.component.ts","webpack:///src/app/drp-dialog.component.html","webpack:///src/app/drp-scriptloader.ts","webpack:///src/app/drp.component.ts","webpack:///src/app/drp.component.html","webpack:///src/app/drp.module.ts","webpack:///src/app/drpBaseData.ts","webpack:///src/app/drpservice.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","GoogleChartDirective","element","_element","nativeElement","googleLoaded","google","charts","load","setTimeout","drawGraph","chartOptions","chartType","chartData","setOnLoadCallback","drawChart","wrapper","visualization","ChartWrapper","dataTable","options","draw","selector","DCDirective","viewContainerRef","DCItem","component","data","DynamicContentService","localStorageService","stored_data","get","key","dataToSend","DCDataComponent","DCMainComponent","componentFactoryResolver","script","_dcService","items","Items","tabchange","loadComponent","console","log","dcItem","componentFactory","resolveComponentFactory","dcHost","clear","componentRef","createComponent","instance","template","gauge_type","gauge_ChartData","gauge_ChartOptions","width","height","redFrom","redTo","yellowFrom","yellowTo","greenFrom","greenTo","minorTicks","bar_ChartData","bar_ChartOptions","title","chartArea","hAxis","minValue","maxValue","textStyle","bold","fontSize","color","titleTextStyle","uai_cl","Number","cl_value","uai_de","de_value","uaidiff","diff","pref_cl","pref_de","prefdiff","prefaverage","average","uaiaverage","totalaverage","ResultNumber","a","b","Math","abs","x","y","toFixed","styles","DialogComponent","tab","drp","name","Qtable","templateUrl","ScriptStore","src","Script","scripts","forEach","loaded","promises","push","loadScript","all","reject","status","document","createElement","type","readyState","onreadystatechange","onload","onerror","error","getElementsByTagName","appendChild","script_inline","text","DRPComponent","_drpService","dialog","getData","getTabStatus","setTabStatus","selectedIndex","cl_fingerprint","de_fingerprint","getBaseData","drpdata","test","storeToPersist","resetPersist","dialogRef","open","afterClosed","subscribe","result","status_icon","persistData","val","selectedIndexChange","gotoAnalysis","gotoClaimant","gotoDefendant","resetData","styleUrls","providers","AppModule","forRoot","prefix","storageType","declarations","imports","entryComponents","bootstrap","DRPMOCKDATA","DRPService","DRPdata","filter","h","drpvalues","set","clearAll","page","no","surveyJSON","pages","elements","choices","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Directive, ElementRef, Input, OnChanges} from '@angular/core';\r\n\r\ndeclare let google: any;\r\ndeclare let googleLoaded: any;\r\ndeclare let googleChartsPackagesToLoad: any;\r\n\r\n@Directive({\r\n  selector: '[GoogleChart]'\r\n})\r\nexport class GoogleChartDirective implements OnChanges {\r\n\r\n  public _element: any;\r\n  @Input('chartType') public chartType: string;\r\n  @Input('chartOptions') public chartOptions: Object;\r\n  @Input('chartData') public chartData: Object;\r\n  constructor(public element: ElementRef) {\r\n    this._element = this.element.nativeElement;\r\n  }\r\n  ngOnChanges() {\r\n    if (!googleLoaded) {\r\n      googleLoaded = true;\r\n      google.charts.load('current', {'packages':['corechart', 'gauge']['orgchart']});\r\n    }\r\n    setTimeout(() => this.drawGraph(this.chartOptions, this.chartType, this.chartData, this._element), 1000);\r\n  }\r\n  drawGraph (chartOptions:any, chartType:any, chartData:any, element:any) {\r\n    google.charts.setOnLoadCallback(drawChart);\r\n    function drawChart() {\r\n      let wrapper;\r\n      wrapper = new google.visualization.ChartWrapper({\r\n        chartType: chartType,\r\n        dataTable: chartData ,\r\n        options: chartOptions || {}\r\n      });\r\n      wrapper.draw(element);\r\n    }\r\n  }\r\n}","/**\r\n * SOURCE: https://angular.io/guide/dynamic-component-loader\r\n * \r\n */\r\n\r\n/**\r\n * ALL IMPORTS FOR:\r\n *  - directive (DCDirective)\r\n *  - component placeholder (DCPlaceholderComponent)\r\n *  - type class (DCItem)\r\n *  - service (DynamicContentService)\r\n *  - main module (DCMainComponent)\r\n *  - dynamic data module (DCDataComponent)\r\n * \r\n * Add to .module:\r\n *  - import { DCMainComponent, DCDirective, DCDataComponent, DynamicContentService } from './dc.drp-graphs.component';\r\n *  - declarations: [ DCMainComponent, DCDataComponent, DCDirective ],\r\n *  - providers:[ DynamicContentService ],\r\n *   - entryComponents: [ DCMainComponent, DCDataComponent ]\r\n *\r\n  * Add to main component html:\r\n *  <dynamic-content [items]=\"items\" [tabchange]=\"selectedIndex\" ></dynamic-content> //is selector of main component\r\n *  'tabchange' and 'items' are holding data to be transferred to corresponding '@Input statement in main component.\r\n */\r\nimport { Component, Input, OnInit, ViewChild, ComponentFactoryResolver, Type, Directive, ViewContainerRef, Injectable } from '@angular/core';\r\nimport { MatSlider } from '@angular/material/slider';\r\nimport { MatButton } from '@angular/material/button';\r\n//Next imports are specific for DRP\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\nimport { DRPMOCKDATA } from './drpBaseData';\r\nimport { Script } from './drp-scriptloader'; //gemaakt om Google Charts script te lazy loaden\r\n\r\n// Directive: Selector will be placed in the component where the dynamic data will be shown like this: \"<ng-template dynamic-content-data></ng-template>\"\r\n@Directive({ selector: '[dynamic-content-data]', })\r\nexport class DCDirective { constructor( public viewContainerRef: ViewContainerRef ) { } }\r\n\r\n// PLACEHOLDER COMPONENT\r\nexport interface DCPlaceholderComponent { data: any; }\r\n\r\n// DCItem, import 'type' from angular core\r\nexport class DCItem {  constructor( public component: Type<any>, public data: any) {} }\r\n\r\n/**\r\n * SERVICE NEEDED\r\n */\r\n@Injectable() \r\nexport class DynamicContentService {\r\n  constructor (\r\n    private localStorageService: LocalStorageService\r\n  ) { }\r\n  //hiermee wordt de standaard set data of de opgeslagen data opgehaald.\r\n  Items() {\r\n    let stored_data = this.localStorageService.get(key);\r\n    //geen stored data dan standaard static data\r\n    let dataToSend = DRPMOCKDATA;\r\n    if (stored_data){\r\n      for (var key in dataToSend) { dataToSend[key] = stored_data[key]  }\r\n    }\r\n    return [ new DCItem(DCDataComponent, { dataToSend }),  ];\r\n  }\r\n}\r\n\r\n/**\r\n * MAIN COMPONENT, initialisatie, inladen scripts\r\n */\r\n\r\n@Component({\r\n  selector: 'dynamic-content',\r\n  template: `<ng-template dynamic-content-data></ng-template>`\r\n})\r\nexport class DCMainComponent implements OnInit {\r\n  @Input() tabchange:number;\r\n  @ViewChild(DCDirective) dcHost: DCDirective;\r\n  public items: DCItem[];\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private script : Script,\r\n    private _dcService: DynamicContentService,\r\n  ) { }\r\n  \r\n  ngOnInit(){\r\n    //eenmalige initialisatie\r\n    this.items = this._dcService.Items();\r\n  }\r\n  \r\n  //Check bij welke tab hij is, 0 = Claimant, 1 = Defendant, 2 = Analysis \r\n  ngOnChanges() {\r\n    //wanneer de analyse tab wordt opgevraagd, dan losgaan \r\n    if(this.tabchange == 2) {\r\n      //vraag het script op\r\n      this.script.load('googlechart')\r\n        //laadt Charts pas als script is ingeladen\r\n        .then(() => this.loadComponent())\r\n        //eventuele foutmeldingen: TODO, een spinner op het scherm voor als het lang duurt.\r\n        .catch(() => console.log('Google Chart loading niet gelukt'));\r\n    }\r\n\t}\r\n  \r\n  //DE MAGIE, nog eens uitzoeken wat hier nu gebeurt.\r\n  loadComponent() {\r\n    let dcItem = this.items[0];\r\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(dcItem.component);\r\n    let viewContainerRef = this.dcHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n    let componentRef = viewContainerRef.createComponent(componentFactory);\r\n    (<DCPlaceholderComponent>componentRef.instance).data = dcItem.data;\r\n  }\r\n}\r\n\r\n/**\r\n * DATA COMPONENT, HIER WORDT DE DYNAMISCHE CONTENT OPGEBOUWD/SAMENGESTELD\r\n */\r\n@Component({ \r\n  template: `\r\n  <div style=\"margin-top:16px; margin-bottom:16px;\">Level of differences</div>\r\n  <div id=\"gauge_chart\" [chartType]=\"gauge_type\" [chartOptions]= \"gauge_ChartOptions\" [chartData]=\"gauge_ChartData\" GoogleChart></div>    \r\n    <div style=\"margin-top:16px;\"><h2>Recommendation:</h2></div>\r\n    <p>Based on this recommendation, a match with existing dispute resolution offerings can be made.<p>\r\n    <mat-slider color=\"primary\" min=\"1\" max=\"100\" step=\"1\" value=\"{{ResultNumber}}\"></mat-slider>\r\n    <p style=\"font-size:small; margin-top: -10px\">Negotiation - Mediation - Arbitration - Litigation</p>\r\n  `,\r\n  styles:[`\r\n    .mat-slider-horizontal{\r\n      min-width: 300px;\r\n    }\r\n    p{\r\n      white-space: pre-rap;\r\n      margin-top: -5px;\r\n      font-size: small;\r\n    }\r\n  `]\r\n})\r\nexport class DCDataComponent implements OnInit { \r\n  @Input() data: any; \r\n  public ResultNumber: number;\r\n\r\n  // ------ GAUGE - CLOCK -  UAI -----------\r\n  public gauge_type : string = \"Gauge\";\r\n\r\n  public gauge_ChartData = [\r\n        ['Label', 'Value'],\r\n        ['UAI', 30],\r\n        ['Preference', 80]\r\n  ];\r\n\r\n  public gauge_ChartOptions = {\r\n        width: 400, height: 120,\r\n        redFrom: 75, redTo: 100,\r\n        yellowFrom: 25, yellowTo: 75,\r\n        greenFrom: 0, greenTo: 25,\r\n        minorTicks: 5\r\n  };\r\n\r\n  // ------ BAR CHARTS -----------\r\n  public bar_ChartData = [\r\n        ['Element', 'Procedure'],\r\n        ['Recommmended procedure', 30]\r\n  ];\r\n\r\n  public bar_ChartOptions = {\r\n        title: 'Claimant and Defendant profiles combined',\r\n        width: '600px',\r\n        chartArea: {width: '70%'},\r\n        hAxis: {\r\n            title: 'Percentage',\r\n            minValue: 0,\r\n            maxValue: 100,\r\n            textStyle: {\r\n                bold: false,\r\n                fontSize: 10,\r\n                color: '#4d4d4d'\r\n            },\r\n            titleTextStyle: {\r\n                bold: true,\r\n                fontSize: 10,\r\n                color: '#4d4d4d'\r\n            }\r\n        },\r\n      };\r\n\r\n ngOnInit() {\r\n   let uai_cl = Number (this.data['dataToSend'][0].cl_value);\r\n   let uai_de = Number (this.data['dataToSend'][0].de_value);\r\n   this.bar_ChartData[1] = ['UAI', uai_de, uai_cl];\r\n \r\n   let uaidiff = this.diff(+this.data['dataToSend'][0].cl_value, +this.data['dataToSend'][0].de_value)\r\n   this.gauge_ChartData[1] = ['UAI', uaidiff];\r\n\r\n   let pref_cl = Number (this.data['dataToSend'][1].cl_value);\r\n   let pref_de = Number (this.data['dataToSend'][1].de_value);\r\n   this.bar_ChartData[2] = ['Preference', pref_de, pref_cl];    \r\n\r\n   let prefdiff = this.diff(+this.data['dataToSend'][1].cl_value, +this.data['dataToSend'][1].de_value)\r\n   this.gauge_ChartData[2] = ['Procedure', prefdiff];\r\n\r\n   let prefaverage = Number (this.average(pref_cl,pref_de ) );\r\n   let uaiaverage =  Number (this.average(uai_cl,uai_de ) );\r\n   let totalaverage = this.average(prefaverage,uaiaverage );\r\n   this.ResultNumber = Number (totalaverage);\r\n\r\n  }\r\n\r\n  //CALC difference between numbers\r\n  diff(a:number,b:number){return Math.abs(a-b);}\r\n  average(x:number,y:number){return((x+y)/2).toFixed(2)}\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSelect } from '@angular/material/select';\r\n\r\n@Component({\r\n  selector: 'drp-dialogbox',\r\n  templateUrl: 'drp-dialog.component.html',\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  public Qtable :string;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: {\r\n      drp : any, //Injected is data from drp.component.ts\r\n      tab: any, //index, waarbij: 0 = Claimant, 1 = Defendant, 2 = Analysis\r\n    }, \r\n  ) {}\r\n  ngOnInit() {\r\n    //Check bij welke tab hij is, 0 = Claimant, 1 = Defendant, 2 = Analysis \r\n    //Provide data for Switch statement, to select correct form\r\n    if (this.data.tab == 0 && this.data.drp.name == 'Procedural preference') { this.Qtable = 'claimant-proc_pref'; };\r\n    if (this.data.tab == 0 && this.data.drp.name == 'Uncertainty Avoidance Index') { this.Qtable = 'claimant-UAI'; };\r\n    if (this.data.tab == 1 && this.data.drp.name == 'Procedural preference') { this.Qtable = 'defendant-proc_pref'; };\r\n    if (this.data.tab == 1 && this.data.drp.name == 'Uncertainty Avoidance Index') { this.Qtable = 'defendant-UAI'; };\r\n  }\r\n}","<h2 mat-dialog-title class=\"primary-color\">{{data.drp.name}}</h2>\r\n<mat-dialog-content class=\"accent-color\">\r\n  <p>{{data.drp.description}}</p>\r\n\r\n <div [ngSwitch]=\"Qtable\">\r\n    <ng-template [ngSwitchCase]=\"'claimant-proc_pref'\" ngSwitchDefault> \r\n      <mat-form-field>\r\n        <mat-select [(ngModel)]=\"data.drp.cl_value\" name=\"cl_Pref\">\r\n          <mat-option value=20>Negotiation</mat-option>\r\n          <mat-option value=40>Mediation</mat-option>\r\n          <mat-option value=60>Arbitration</mat-option>\r\n          <mat-option value=80>Litigation</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </ng-template>      \r\n    \r\n    <ng-template [ngSwitchCase]=\"'claimant-UAI'\"> \r\n      <mat-form-field>\r\n          <mat-select [(ngModel)]=\"data.drp.cl_value\" name=\"cl_UAI\">\r\n            <mat-option value=20>Trust is key</mat-option>\r\n            <mat-option value=40>A bit of risk is OK</mat-option>\r\n            <mat-option value=60>I take calculated risks</mat-option>\r\n            <mat-option value=80>Why should I take risks?</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n    </ng-template>\r\n\r\n    <ng-template [ngSwitchCase]=\"'defendant-proc_pref'\"> \r\n      <mat-form-field>\r\n          <mat-select [(ngModel)]=\"data.drp.de_value\" name=\"de_Pref\">\r\n            <mat-option value=20>Negotiation</mat-option>\r\n            <mat-option value=40>Mediation</mat-option>\r\n            <mat-option value=60>Arbitration</mat-option>\r\n            <mat-option value=80>Litigation</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n    </ng-template>\r\n\r\n    <ng-template [ngSwitchCase]=\"'defendant-UAI'\"> \r\n      <mat-form-field>\r\n        <mat-select [(ngModel)]=\"data.drp.de_value\" name=\"de_UAI\">\r\n          <mat-option value=20>Trust is key</mat-option>\r\n          <mat-option value=40>A bit of risk is OK</mat-option>\r\n          <mat-option value=60>I take calculated risks</mat-option>\r\n          <mat-option value=80>Why should I take risks?</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </ng-template>\r\n    \r\n    <p><small>{{data.drp.value_input_instruct}}</small></p>\r\n  \r\n  </div>  \r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" mat-dialog-close=\"save\">OK</button>  \r\n      <button mat-raised-button color=\"secondary\" mat-dialog-close=\"exclude\">Exclude</button>  \r\n</mat-dialog-actions>\r\n\r\n\r\n\r\n\r\n","/**\r\n * see: https://stackoverflow.com/questions/37729896/how-to-load-a-3rd-party-script-from-web-dynamically-into-angular2-component\r\n * First answer, probably is third answer better but didn't it get to work\r\n * \r\n * UITLEG: \r\n * - in module: \r\n *      - import: \"import { Script } from './drp-scriptloader';\"\r\n *      - voeg toe aan providers: \"providers:[ Script],\"\r\n * \r\n * - in een compontent: \r\n *      - import deze loader: \"import { Script } from './drp-scriptloader';\"\r\n *      - in de construct, maak aan variabele aan: \"constructor( private script : Script) { }\r\n *      - in een functie, bijv. oninit, roep het script op (bij de naam) als promise, \r\n *          zodat eerst script wordt geladen en dan pas de rest: \r\n *              this.script.load('googlechart')\r\n *                   .then(() => this.loadComponent()) //dit is de vervolgactie\r\n *                   .catch(() => console.log('Google Chart loading niet gelukt')); //dit is eventuele foutmelding\r\n * \r\n */\r\n\r\n /**\r\n * SCRIPT STORE, holds all names of the scripts\r\n * from example ScriptStore.ts\r\n */\r\n\r\ninterface Scripts {\r\n    name: string;\r\n    src: string;\r\n}  \r\nexport let ScriptStore: Scripts[] = [\r\n    { name: 'googlechart', src: 'https://www.gstatic.com/charts/loader.js' },\r\n    //{ name: 'googlechart_load_instructions', src: '../assets/angular2-google-chart-loadinstructions.js' }\r\n    ];\r\n\r\n/**\r\n * SCRIPT SERVICE\r\n * from example script.service.ts\r\n */\r\nimport {Injectable} from \"@angular/core\";\r\n//import {ScriptStore} from \"./script.store\";\r\n\r\ndeclare var document: any;\r\n\r\n@Injectable()\r\nexport class Script {\r\n\r\nprivate scripts: any = {};\r\n\r\nconstructor() {\r\n    ScriptStore.forEach((script: any) => {\r\n        this.scripts[script.name] = {\r\n            loaded: false,\r\n            src: script.src\r\n        };\r\n    });\r\n}\r\n\r\nload(...scripts: string[]) {\r\n    var promises: any[] = [];\r\n    scripts.forEach((script) => promises.push(this.loadScript(script)));\r\n    return Promise.all(promises);\r\n}\r\n\r\nloadScript(name: string) {\r\n    return new Promise((resolve, reject) => {\r\n        //resolve if already loaded\r\n        if (this.scripts[name].loaded) {\r\n            resolve({script: name, loaded: true, status: 'Already Loaded'});\r\n        }\r\n        else {\r\n            //load script\r\n            let script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = this.scripts[name].src;\r\n            if (script.readyState) {  //IE\r\n                script.onreadystatechange = () => {\r\n                    if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n                        script.onreadystatechange = null;\r\n                        this.scripts[name].loaded = true;\r\n                        resolve({script: name, loaded: true, status: 'Loaded'});\r\n                    }\r\n                };\r\n            } else {  //Others\r\n                script.onload = () => {\r\n                    this.scripts[name].loaded = true;\r\n                    resolve({script: name, loaded: true, status: 'Loaded'});\r\n                };\r\n            }\r\n            script.onerror = (error: any) => resolve({script: name, loaded: false, status: 'OnError'});\r\n            document.getElementsByTagName('head')[0].appendChild(script);\r\n\r\n            /* SPECIALE FUNCTIE VOOR INLINE SCRIPT */\r\n            let script_inline = document.createElement('script');\r\n            script_inline.type = 'text/javascript';\r\n            script_inline.text = \"var googleLoaded = false; var googleChartsPackagesToLoad = ['BarChart', 'Gauge'];\";\r\n            document.getElementsByTagName('head')[0].appendChild(script_inline);            \r\n        }\r\n    });\r\n}\r\n\r\n}","import { Component, OnInit, Input } from '@angular/core';\n\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatTabGroup, MatTab } from '@angular/material/tabs';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButton } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIcon } from '@angular/material/icon';\n\n\nimport { DRPData } from './drpdata';\nimport { DRPService } from './drpservice';\nimport { DialogComponent } from './drp-dialog.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'drp.component.html',\n  styleUrls: ['./drp.component.css'],\n  providers: [],\n})\n\nexport class DRPComponent implements OnInit {\n  public drpdata: DRPData[]; \n  public selectedItem: DRPData;\n  public cl_fingerprint:string;\n  public de_fingerprint:string;\n  selectedIndex:number; //van de tabs, start op nul\n    \n  constructor(\n    private _drpService: DRPService,\n    public dialog: MatDialog,\n  ) { }\n \n ngOnInit() {\n    this.getData(\"drpdata\");\n    //ga door bij laatste tab of begin bij UNCITRAL tab\n    let tab = this._drpService.getTabStatus('drptab');\n    if (tab == null){ \n      this._drpService.setTabStatus('drptab', 3); \n      this.selectedIndex = 3;  \n      }//set tab on 0 on first go\n    else { this.selectedIndex = Number (tab); }\n    //static fingerprint data\n    this.cl_fingerprint = '#9KL473LK'\n    this.de_fingerprint = '#7EL897KI'\n  }\n  getData(key:string) {\n    this._drpService.getBaseData(key).then(drpdata => this.drpdata = drpdata);\n  }\n  persistData(key:string) {\n    let test = this._drpService.storeToPersist(key,this.drpdata);\n  }\n  resetData() {\n    this._drpService.resetPersist();\n    //TODO, RELOAD ORIGINAL DATA, BELOW DOESN'T WORK\n  }\n \n  //Open popup window en stuur object er naar toe\n  openDialog(drpdata:any) {\n    //initiate dialogbox and send data\n    let dialogRef = this.dialog.open(DialogComponent, {\n      width: '324px',\n      data: {\n        drp: drpdata, //alle data in drpdata\n        tab: this.selectedIndex, //index, waarbij: 0 = Claimant, 1 = Defendant, 2 = Analysis\n      }\n      } );\n    //result back\n    dialogRef.afterClosed().subscribe(result => {\n      if(result == 'exclude') {\n        drpdata.status_icon = 'block'; //set checkmark icon\n        //use tab selector to see if claimant or defendant provided data\n        if (this._drpService.getTabStatus('drptab') == 0) {drpdata.cl_value = 'none (excluded)';}\n        else { drpdata.de_value = 'none (excluded)';}\n        //TODO, REMOVE VALUE FROM CORRECT DRPDATA...\n        this.persistData('drpdata');\n      }        \n      if(result == 'save') {\n        drpdata.status_icon = 'done'; //set checkmark icon\n        this.persistData('drpdata'); //store data in localstorage\n      }\n    });\n  }\n  \n  //Check bij welke tab hij is, 0 = Claimant, 1 = Defendant, 2 = Analysis \n  selectedIndexChange(val :number ){\n    this.selectedIndex=val; //for in the page\n    this._drpService.setTabStatus('drptab', val); //for persisting outside page\n  }\n  gotoClaimant(){this.selectedIndex=0;} //2 is index number of analysis tab\n  gotoDefendant(){this.selectedIndex=1;} //2 is index number of analysis tab\n  gotoAnalysis(){this.selectedIndex=2;} //2 is index number of analysis tab\n}","<div id=drp-main fxLayout=\"column\" fxLayoutAlign=\"start center\">\r\n    <div id=drp-inner fxLayout=\"column\">\r\n    <mat-tab-group dynamicHeight=\"true\" (selectedIndexChange)=\"selectedIndexChange($event)\" [selectedIndex]=\"selectedIndex\">\r\n      <mat-tab label=\"Claimant\">\r\n        <h2>Claimant profile</h2>\r\n        <div class = \"drp-mainfields\">\r\n          <li *ngFor=\"let drpitem of drpdata\">\r\n            <button mat-raised-button (click)=\"openDialog(drpitem)\">\r\n              <mat-icon>{{drpitem.status_icon}}</mat-icon>\r\n              {{drpitem.name}}\r\n            </button>\r\n            <p>{{drpitem.value_description}} {{drpitem.cl_value}}</p>\r\n          </li>\r\n        </div>\r\n        <div>\r\n          <input matInput placeholder=\"Example fingerprint (in blockchain)\" disabled value={{cl_fingerprint}}>\r\n        </div>\r\n        <button mat-raised-button color=\"secondary\" mat-button (click)=\"gotoAnalysis()\">Analyse</button>\r\n      </mat-tab>\r\n      \r\n      \r\n      <mat-tab label=\"Defendant\">\r\n        <h2>Defendant Profile</h2>\r\n        <div class = \"drp-mainfields\">\r\n          <li *ngFor=\"let drpitem of drpdata\">\r\n            <button mat-raised-button (click)=\"openDialog(drpitem)\">\r\n              <mat-icon> {{drpitem.status_icon}}</mat-icon>\r\n              {{drpitem.name}}\r\n            </button>\r\n            <p>{{drpitem.value_description}} {{drpitem.de_value}}</p>\r\n          </li>\r\n        </div>\r\n        <!--<input [(ngModel)]=de_fingerprint placeholder=\"insert value\"/>-->\r\n          <div>\r\n            <input matInput placeholder=\"Example fingerprint (in blockchain)\" disabled value={{de_fingerprint}}>\r\n          </div>\r\n        <button mat-raised-button color=\"secondary\" mat-button (click)=\"gotoAnalysis()\">Analyse</button>\r\n      </mat-tab>\r\n\r\n      <!--ANALYSIS START -->\r\n      <mat-tab label=\"Analysis\">\r\n      <!--CHARTS UAI -->\r\n        <h2>DEMO Analysis</h2>\r\n        <h6>This is NOT legal advise, just a demonstration</h6>\r\n        <p>Fingerprints: <span style=\"color:red; font-weight:700\">{{cl_fingerprint}}</span> | <span style=\"color:blue; font-weight:bold\">{{de_fingerprint}}</span></p>\r\n    <!-- AN INJECTABLE TO DYNAMIC LOAD items BASED ON ACTUAL DATA -->\r\n        <dynamic-content [tabchange]=\"selectedIndex\" ></dynamic-content>\r\n      </mat-tab>\r\n      \r\n      <!--UNCITRAL 2017 TAB -->\r\n      <mat-tab label=\"UNCITRAL 2017\">\r\n      <!--CHARTS UAI -->\r\n        <h2>PRESENTATION 50TH ANNIVERSARY UNCITRAL CONGRESS</h2>\r\n          <p>This demo was shown at the UNCITRAL Congress 2017 as part of new frontiers in dispute settlement. <a href=\"https://au.linkedin.com/in/dr-dalma-r-demeter-849aa1a\" target=\"_blank\">Dr Dalma R. Demeter</a> showed it in the jointly prepared <a href=\"http://www.uncitral.org/pdf/english/congress/Draft_Programme_170517.pdf\" target=\"_blank\">presentation</a> with title \"The use of technology in dispute settlement\". The demo shows how culture elements can be taken into consideration when determining the best dispute resolution option for a certain case.</p>\r\n          <p>In the report to the General Assembly of the United Nations regarding the 50th Session of UNCITRAL, the presentation is referred to in paragraph 408:</p>\r\n          <p><i>\"The third panel, on new frontiers in dispute settlement, had covered developments in the field of [...] solutions of a technological nature to enhance access to justice.\"</i> (<a href=\"https://undocs.org/en/A/72/17\" target=\"_blank\">source</a>)</p>\r\n        <h2>DEMO UNCITRAL 2017</h2>\r\n          <p>This prototype demonstrates what a small part of the application may become.</p>\r\n          <p>Feel free to test it</p>\r\n          <p>For background please read <a href=\"https://www.legallinq.com/UNCITRAL_2017_Dispute_Resolution_Presentation/assets/98-DEMETER_and_KNIJPENGA-Putting_technology_at_the_service_of_access_to_justice.pdf\" target=\"_blank\"> the paper</a> by Dalma Demeter and Jeroen Knijpenga.</p>\r\n          \r\n          <button mat-raised-button (click)=\"gotoClaimant()\">Start as Claimant</button>\r\n          <button mat-raised-button (click)=\"gotoDefendant()\">Start as Defendant</button>\r\n          <br/>\r\n          <button mat-button (click)=\"resetData()\"><mat-icon>delete</mat-icon>Reset Profile Data</button>\r\n\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule }   from '@angular/forms';\n//import { HttpModule } from '@angular/http'; depreciated, vervanging:\nimport { HttpClientModule } from '@angular/common/http';\nimport { LocalStorageModule } from 'angular-2-local-storage';\n\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\n \nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { DRPComponent } from './drp.component';\nimport { GoogleChartDirective } from './angular2-google-chart.directive';\nimport { DialogComponent } from './drp-dialog.component'\nimport { DCMainComponent, DCDirective, DCDataComponent, DynamicContentService } from './dc.drp-graphs.component';\nimport { DRPService } from './drpservice';\nimport { Script } from './drp-scriptloader';\n\n\n@NgModule({\n  declarations: [ \n    DRPComponent,\n    DialogComponent,\n    GoogleChartDirective,\n    DCMainComponent,\n    DCDataComponent,\n    DCDirective\n    ],\n    imports: [ \n      BrowserModule,\n      BrowserAnimationsModule,\n      CommonModule,\n      HttpClientModule, \n      MatDialogModule, MatTabsModule,MatInputModule, MatFormFieldModule, MatSliderModule, MatButtonModule, MatSelectModule, MatIconModule,\n      FlexLayoutModule,\n      FormsModule,\n      LocalStorageModule.forRoot({\n         prefix: 'llqdrp',\n         storageType: 'localStorage'\n       }),\n    ],\n  providers:[ DRPService, DynamicContentService, Script],\n  entryComponents: [ DialogComponent, DCMainComponent, DCDataComponent ],\n  bootstrap: [DRPComponent]\n})\nexport class AppModule { }\n","import { DRPData } from './drpdata';\r\n\r\nexport var DRPMOCKDATA: DRPData[] = [\r\n/*\t{\r\n\t\t\"id\" : 0, \r\n\t\t\"name\" : \"\", \r\n\t\t\"description\" : \"\",\r\n\t\t\"cl_value\" : \"\",\r\n\t\t\"value_description\" : \"\",\r\n\t\t\"value_input_instruct\" : \"\"\r\n\t},\r\n*/\t{\r\n\t\t\"id\" : 0, \r\n\t\t\"name\" : \"Uncertainty Avoidance Index\", \r\n\t\t\"description\" : \"A cultural element that measures the relative risk avoidance.\",\r\n\t\t\"cl_value\" : \"50\",\r\n\t\t\"de_value\" : \"50\",\r\n\t\t\"value_description\" : \"The percentage of UAI is:\",\r\n\t\t\"value_input_instruct\" : \"Please make a choice or 'EXCLUDE'.\",\r\n\t\t\"status_icon\" : \"edit\"\r\n\t},\r\n\t{\r\n\t\t\"id\" : 1, \r\n\t\t\"name\" : \"Procedural preference\", \r\n\t\t\"description\" : \"Preferences on a dispute resolution continuum.\",\r\n\t\t\"cl_value\" : \"40\",\r\n\t\t\"de_value\" : \"40\",\r\n\t\t\"value_description\" : \"On a dispute resolution continuum scale: \",\r\n\t\t\"value_input_instruct\" : \"Please make a choice or 'EXCLUDE'.\",\r\n\t\t\"status_icon\" : \"edit\"\r\n\t},\r\n];","import { Injectable } from '@angular/core';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\nimport { DRPMOCKDATA } from './drpBaseData';\r\nimport { DRPData } from './drpdata';\r\n\r\n@Injectable() \r\nexport class DRPService {\r\n\tconstructor (\r\n        //API https://github.com/grevory/angular-local-storage\r\n\t\tprivate localStorageService: LocalStorageService,\r\n\t\t//public stored_data: DRPData[],\r\n    ) { }\r\n    \r\n\tgetBaseData(key:string) {\r\n\t\tlet stored_data = this.localStorageService.get(key);\r\n\t\t//geen stored data dan standaard static data\r\n\t\tlet dataToSend = DRPMOCKDATA;\r\n\t\tif (stored_data){\r\n\t\t\tfor (var key in dataToSend) {\r\n   \t\t\t\tdataToSend[key] = stored_data[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.resolve(dataToSend);\r\n\t}\r\n\r\n\tgetIndividualData(id: number) {\r\n    return Promise.resolve(DRPMOCKDATA)\r\n      .then(DRPdata => DRPdata.filter(h => h.id === id)[0]);\r\n\t}\r\n\tstoreToPersist(key:string, drpvalues: any){\r\n\t\t//TODO: maybe filter only values, but lot of trouble for not much fun\r\n\t\treturn this.localStorageService.set(key, drpvalues);\r\n\t}\r\n\tresetPersist(){\r\n\t\tthis.localStorageService.clearAll();\r\n\t}\r\n\r\n\t//tab status on DRP mainpage\r\n\tgetTabStatus(page:string){ return this.localStorageService.get (page)\t}\r\n\tsetTabStatus(page:string, no:number){ return this.localStorageService.set(page, no) }\r\n\r\n\tgetSuveyJson(id: number) {\r\n\t\tlet surveyJSON;\r\n\t\tconsole.log('Survey ID requested: ' +id);\r\n\t\tif (id === 0) return surveyJSON = {pages:[{name:\"page1\",elements:[{type:\"panel\",name:\"panel1\",elements:[{type:\"radiogroup\",choices:[\"item1\",\"item2\",\"item3\"],name:\"question1\"}],title:\"wt is het\"}]}]};\r\n\r\n\t}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/drp.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}